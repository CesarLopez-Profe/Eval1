/*
 * This source file was generated by the Gradle 'init' task
 */
package eval1;

public class App {
   

    public static void main(String[] args) {
        


    }

    /* Ejercicio práctico, Parcial 1 Lógica de Programación
    
    +-------------------------------------------------------------------------------------------------------+
    |                                                 TEMAS A EVALUAR                                       |
    |                                                                                                       |
    |   Construcción de un algoritmo, razonamiento lógico                                                   |
    |   Declaración e inicialización de variables y constantes                                              |
    |   Uso adecuado de tipos de datos                                                                      |
    |   Diseño y desarrollo de fuciones                                                                     |
    |   Uso con criterio, de estrucuras condicionales                                                       |
    |   Manejo de errores                                                                                   |
    |                                                                                                       |
    |                                                  RUBRICA  (25 puntos)                                 |
    |                                                                                                       |
    |   La función pasa todos los tests                                                        18 puntos    |
    |   El código de la función está escrito ordenadamente, está identado adecuadamente         2 puntos    |
    |   (el parámetro de comparación son los códigos hechos por el profesor en clase)                       |
    |   La función tiene control de errores                                                     2 puntos    |
    |   Tiene adecuadamente definidas las constantes y las variables requeridas                 3 puntos    |
    |                                                                                                       |
    +-------------------------------------------------------------------------------------------------------+


    Adaptado de Codingbat.com
    
    En una fábrica de chocolate se requiere empacar las barras de chocolate que va produciendo.
    Cada barra que produce es de 1kg. La fábrica tiene dos tipos de empaque: uno pequeño de 1 kilo y otro
    grande de 5 kilos. 
    
    Se requiere una función llamada Empacar_choco que recibe tres enteros: la cantidad de empaques pequeños, 
    la cantidad de empaques grandes y la cantidad total de barras a empacar. 
    Devuelve en un entero, la cantidad de barras pequeñas que se necesitarían utilizar, suponiendo que siempre se van a usar  
    primero los empaques grandes antes que los empaques pequeños. Ojo: no todos los empaques grandes se tienen que utilizar. 
    
    Devuelve -1 si: 
        No hay suficientes empaques pequeños después de usar los grandes, para empacar esa cantidad.
        Si alguno de los parámetros de entrada es menor o igual a 0. 
        Si no hay suficiente empaque para la cantidad total
        Si hay un error inesperado
    
    
    Ejemplo 1: 
    Empacar_choco(4, 1, 9) → (retorna) 4 porque se necesita empacar 9 barras, se usa 1 empaque grande de 5kl donde caben 5 barras y retorna 
    los 4 empaques de 1 kilo que hacen falta
    
    Ejemplo 2:
    Empacar_choco(1, 2, 5) → retorna 0 porque se necesita empacar 5 barras, se usa 1 empaque de 5kl donde caben las 5 barras y retorna 
    0 empaques de 1 kilo porque no hicieron falta.

    Otros Ejemplos: 
    Empacar_choco(3, 1, 9) → -1
    Empacar_choco(9, 3, 18) → 3
    Empacar_choco(60, 100, 550) → 50
    Empacar_choco(0, 2, 9) → -1

    

    */



}
